/*
 * Copyright (c) 2002, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

#include <ctype.h>

#include "bool.h"
#include "utf.h"

  $$Tables

/* Take pointer to a string.  Skip over the longest part of the string that
 * could be taken as a fieldname.  Allow '/' if slash_okay is TRUE.
 *
 * Return a pointer to just past the fieldname.  Return NULL if no fieldname
 * at all was found, or in the case of slash_okay being true, we saw
 * consecutive slashes (meaning we were looking for a qualified path but
 * found something that was badly-formed). 
 */

#define bool_t int

char *
skip_over_fieldname(char *name, bool_t slash_okay)
{
    char *p = name;
    char *last_p;
    unicode ch;
    unicode last_ch = 0;

    ch = *p;
    if (ch == (ch & 0x7F))
	++p;
    else
	ch = next_utf2unicode(&p);
    if (($$Lookup(ch) & $$bitJavaStart) == 0)
	return 0;
    for (;;) {
	last_p = p;
	last_ch = ch;
	ch = *p;
	if (ch == (ch & 0x7F))
	    ++p;
	else
	    ch = next_utf2unicode(&p);
        if (($$Lookup(ch) & $$bitJavaPart) == 0) {
	    if (ch == '/' && slash_okay) {
		if (last_ch == '/')
		    return 0;
	    }
	    else {
		return last_p;
	    }
	}
    }
}

void main() {
  int j;
  for (j = 0; j < (1 << 16); j++) {
    int q = $$Lookup(j);
    printf("%04x%s%s\n", j,
	   (q & $$bitJavaStart ? " Start" : ""),
	   (q & $$bitJavaPart ? " Part" : ""));
  }
}
